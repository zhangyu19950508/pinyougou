<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
                        http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
    <!-- 以下页面不被拦截(放行的页面)-->
    <http pattern="/register.html" security="none"></http>
    <http pattern="/user/add.do" security="none"></http>
    <http pattern="/user/sendCode.do" security="none"></http>
    <http pattern="/shoplogin.html" security="none"></http>
    <http pattern="/seller/add.do" security="none"></http>
    <http pattern="/css/**" security="none"></http>
    <http pattern="/img/**" security="none"></http>
    <http pattern="/js/**" security="none"></http>
    <http pattern="/plugins/**" security="none"></http>
    <http pattern="/fonts/**" security="none"></http>

    <!-- 页面拦截规则
    <http use-expressions="false">
        &lt;!&ndash;logout-url:退出的地址，会自动生成   logout-success-url:   退出后跳转的地址&ndash;&gt;
        <logout logout-url="" logout-success-url=""/>
        <intercept-url pattern="/*" access="ROLE_ADMIN" />
        &lt;!&ndash;always-use-default-target：指定了是否在身份验证通过后总是跳转到default-target-url属性指定的URL。&ndash;&gt;
        <form-login login-page="/shoplogin.html" always-use-default-target="true"  default-target-url="/admin/index.html"
                    authentication-failure-url="/register.html" />
        <csrf disabled="true"/>
        <headers>
            &lt;!&ndash;如果你在系统中使用了框架页，需要设置框架页的策略为SAMEORIGIN&ndash;&gt;
            <frame-options policy="SAMEORIGIN"/>
        </headers>
    </http>

    &lt;!&ndash; 认证管理器 &ndash;&gt;
    <authentication-manager>
        <authentication-provider user-service-ref="userDetailsService">
            <password-encoder ref="encoder"></password-encoder>
        </authentication-provider>
    </authentication-manager>-->

    <!-- 在spring-Mvc中配置后为什么还需要再这再配一次？spring的两个容器  互不相通-->
    <!-- 引用dubbo 服务 -->
    <!--<dubbo:application name="pinyougou-shop-web" />
    <dubbo:registry address="zookeeper://192.168.25.132:2181"/>-->

 <!--   &lt;!&ndash;<dubbo:reference id="sellerService" interface="com.pinyougou.sellergoods.service.SellerService"></dubbo:reference>&ndash;&gt;
    <dubbo:reference id="sellerService"  interface="com.pinyougou.sellergoods.service.SellerService" >
    </dubbo:reference>-->

    <!--自定义认证类
    <beans:bean id="userDetailsService" class="com.pinyougou.service.UserDetailsServiceImpl">
        <beans:property  name="sellerService" ref="sellerService"></beans:property>
    </beans:bean>
    &lt;!&ndash;该配置用于在登陆时验证被加密的密码&ndash;&gt;
    <beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
-->
    <!--   entry-point-ref  入口点引用 -->

    <http use-expressions="false" entry-point-ref="casProcessingFilterEntryPoint">
        <intercept-url pattern="/**" access="ROLE_USER"/>
        <csrf disabled="true"/>
        <!-- custom-filter为过滤器， position 表示将过滤器放在指定的位置上，before表示放在指定位置之前  ，after表示放在指定的位置之后  -->
        <custom-filter ref="casAuthenticationFilter"  position="CAS_FILTER" />
        <!--发起单点登出请求-->
        <custom-filter ref="requestSingleLogoutFilter" before="LOGOUT_FILTER"/>
        <!--判断是否登出-->
        <custom-filter ref="singleLogoutFilter" before="CAS_FILTER"/>
    </http>

    <!-- CAS入口点 开始 -->
    <beans:bean id="casProcessingFilterEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
        <!-- 单点登录服务器登录URL -->
        <beans:property name="loginUrl" value="http://localhost:9100/cas/login"/>
        <beans:property name="serviceProperties" ref="serviceProperties"/>
    </beans:bean>
    <beans:bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
        <!--service 配置自身工程的根地址+/login/cas   -->
        <beans:property name="service" value="http://localhost:9106/login/cas"/>
    </beans:bean>
    <!-- CAS入口点 结束 -->


    <!-- 认证过滤器 开始 -->
    <beans:bean id="casAuthenticationFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
    </beans:bean>
    <!-- 认证管理器 -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider  ref="casAuthenticationProvider">
        </authentication-provider>
    </authentication-manager>
    <!-- 认证提供者 -->
    <beans:bean id="casAuthenticationProvider"     class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
        <beans:property name="authenticationUserDetailsService">
            <beans:bean class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
                <beans:constructor-arg ref="userDetailsService" />
            </beans:bean>
        </beans:property>
        <beans:property name="serviceProperties" ref="serviceProperties"/>
        <!-- ticketValidator 为票据验证器 -->
        <beans:property name="ticketValidator">
            <beans:bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
                <beans:constructor-arg index="0" value="http://localhost:9100/cas"/>
            </beans:bean>
        </beans:property>
        <beans:property name="key" value="an_id_for_this_auth_provider_only"/>
    </beans:bean>
    <!-- 认证类 -->
    <beans:bean id="userDetailsService" class="com.pinyougou.user.service.UserDetailServiceImpl"/>

    <!-- 认证过滤器 结束 -->


    <!-- 单点登出  开始  -->
    <beans:bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter"/>
    <!--作用：清楚用户信息  用户请求/logout/cas后，执行cas服务器单点登出地址-->
    <beans:bean id="requestSingleLogoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <beans:constructor-arg value="http://localhost:9100/cas/logout?service=http://localhost:9106"/>
        <beans:constructor-arg>
            <beans:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
        </beans:constructor-arg>
        <beans:property name="filterProcessesUrl" value="/logout/cas"/>
    </beans:bean>
    <!-- 单点登出  结束 -->





</beans:beans>
